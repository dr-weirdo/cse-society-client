{"ast":null,"code":"var _jsxFileName = \"/home/towsif/Projects/cse-society-client/src/components/Voting/Admin/CreatePollPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { AddCircle } from \"@mui/icons-material\";\nimport { Box, Button, Container, IconButton, Stack, styled, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport BasicDatePicker from \"./BasicDatePicker\";\nimport ChipsArray from \"./ChipsArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePollContainer = styled(Container)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    paddingTop: theme.spacing(10),\n    height: '100%',\n    overflow: 'auto',\n    marginLeft: theme.spacing(8)\n  };\n});\n\nconst CreatePollPage = () => {\n  _s();\n\n  const [description, setDescription] = useState('');\n  const [keyVal, setKeyVal] = useState(0);\n  const [title, setTitle] = useState('');\n  const [position, setPosition] = useState('');\n  const [chipData, setChipData] = useState([]);\n\n  const handleTitleInput = e => {\n    setTitle(e.target.value);\n  };\n\n  const handlePositionInput = e => {\n    setPosition(e.target.value);\n  };\n\n  const handleAddPosition = () => {\n    if (position) {\n      const obj = {\n        'key': keyVal,\n        'label': position\n      };\n      chipData.push(obj);\n      setKeyVal(keyVal + 1);\n      setPosition('');\n    }\n\n    console.log(chipData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreatePollContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Create a poll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 500,\n        maxWidth: '100%',\n        marginTop: 6,\n        marginBottom: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: title,\n        onChange: handleTitleInput,\n        fullWidth: true,\n        label: \"Poll Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: 'row',\n      spacing: 1,\n      sx: {\n        width: 500,\n        maxWidth: '100%',\n        //display: 'flex',\n        marginBottom: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: position,\n        onChange: handlePositionInput,\n        fullWidth: true,\n        label: \"Add a position\",\n        id: \"fullWidth\",\n        sx: {\n          marginRight: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        size: \"large\",\n        onClick: handleAddPosition,\n        children: /*#__PURE__*/_jsxDEV(AddCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 500,\n        maxWidth: '100%',\n        marginBottom: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(ChipsArray, {\n        chipData: chipData,\n        setChipData: setChipData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 500,\n        maxWidth: '100%',\n        marginBottom: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: description,\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        label: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 500,\n        maxWidth: '100%',\n        marginBottom: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(BasicDatePicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      children: \" Create poll \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePollPage, \"Lc/58jfMBcxn7OqSky7f0RkO6BA=\");\n\n_c = CreatePollPage;\nexport default CreatePollPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePollPage\");","map":{"version":3,"sources":["/home/towsif/Projects/cse-society-client/src/components/Voting/Admin/CreatePollPage.jsx"],"names":["AddCircle","Box","Button","Container","IconButton","Stack","styled","TextField","Typography","useState","BasicDatePicker","ChipsArray","CreatePollContainer","theme","paddingTop","spacing","height","overflow","marginLeft","CreatePollPage","description","setDescription","keyVal","setKeyVal","title","setTitle","position","setPosition","chipData","setChipData","handleTitleInput","e","target","value","handlePositionInput","handleAddPosition","obj","push","console","log","width","maxWidth","marginTop","marginBottom","marginRight"],"mappings":"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","sourcesContent":["import { AddCircle } from \"@mui/icons-material\";\nimport { Box, Button, Container, IconButton, Stack, styled, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport BasicDatePicker from \"./BasicDatePicker\";\nimport ChipsArray from \"./ChipsArray\";\n\nconst CreatePollContainer = styled(Container)(({ theme }) => ({\n    paddingTop: theme.spacing(10),\n    height: '100%',\n    overflow: 'auto',\n    marginLeft: theme.spacing(8)\n}));\n\nconst CreatePollPage = () => {\n    const [description, setDescription] = useState('');\n    const [keyVal, setKeyVal] = useState(0);\n    const [title, setTitle] = useState('');\n    const [position, setPosition] = useState('');\n    const [chipData, setChipData] = useState([]);\n\n    const handleTitleInput = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const handlePositionInput = (e) => {\n        setPosition(e.target.value);\n    };\n\n    const handleAddPosition = () => {\n        if (position) {\n            const obj = { 'key': keyVal, 'label': position };\n            chipData.push(obj);\n            setKeyVal(keyVal + 1);\n            setPosition('');\n        }\n        console.log(chipData);\n    };\n\n    return (\n        <CreatePollContainer>\n            <Typography variant=\"h4\">Create a poll</Typography>\n\n            <form autoComplete=\"o\"></form>\n\n            <Box\n                sx={{\n                    width: 500,\n                    maxWidth: '100%',\n                    marginTop: 6,\n                    marginBottom: 2\n                }}>\n                <TextField value={title}\n                    onChange={handleTitleInput}\n                    fullWidth\n                    label=\"Poll Title\"\n                />\n            </Box>\n\n            <Stack\n                direction={'row'}\n                spacing={1}\n                sx={{\n                    width: 500,\n                    maxWidth: '100%',\n                    //display: 'flex',\n                    marginBottom: 2\n                }}\n            >\n\n                <TextField value={position}\n                    onChange={handlePositionInput}\n                    fullWidth\n                    label=\"Add a position\"\n                    id=\"fullWidth\"\n                    sx={{ marginRight: 1 }} />\n\n                <IconButton color=\"primary\" size=\"large\"\n                    onClick={handleAddPosition}>\n                    <AddCircle />\n                </IconButton>\n            </Stack>\n\n            <Box\n                sx={{\n                    width: 500,\n                    maxWidth: '100%',\n                    marginBottom: 2\n                }}>\n                {/* <Typography>Added positions: </Typography> */}\n                <ChipsArray chipData={chipData} setChipData={setChipData} />\n            </Box>\n            <Box\n                sx={{\n                    width: 500,\n                    maxWidth: '100%',\n                    marginBottom: 2\n                }}>\n                <TextField value={description}\n                    onChange={(e) => {setDescription(e.target.value)}}\n                    fullWidth\n                    multiline\n                    rows={4}\n                    label=\"Description\"\n                />\n            </Box> \n            <Box\n                sx={{\n                    width: 500,\n                    maxWidth: '100%',\n                    marginBottom: 2\n                }}>\n                <BasicDatePicker />\n            </Box> \n            <Button variant=\"contained\"> Create poll </Button>\n        </CreatePollContainer>\n    );\n};\n\nexport default CreatePollPage;"]},"metadata":{},"sourceType":"module"}