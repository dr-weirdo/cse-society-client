{"ast":null,"code":"var _jsxFileName = \"/home/towsif/Projects/cse-society-client/src/components/Voting/Admin/CreatePollPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { AddCircle } from \"@mui/icons-material\";\nimport { Box, Button, Container, IconButton, Stack, styled, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport BasicDatePicker from \"./BasicDatePicker\";\nimport ChipsArray from \"./ChipsArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePollContainer = styled(Container)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    paddingTop: theme.spacing(10),\n    height: '100%',\n    overflow: 'auto'\n  };\n});\n\nconst CreatePollPage = () => {\n  _s();\n\n  const [description, setDescription] = useState('');\n  const [keyVal, setKeyVal] = useState(0);\n  const [title, setTitle] = useState('');\n  const [position, setPosition] = useState('');\n  const [chipData, setChipData] = useState([]);\n\n  const handleTitleInput = e => {\n    setTitle(e.target.value);\n  };\n\n  const handlePositionInput = e => {\n    setPosition(e.target.value);\n  };\n\n  const handleAddPosition = () => {\n    if (position) {\n      const obj = {\n        'key': keyVal,\n        'label': position\n      };\n      chipData.push(obj);\n      setKeyVal(keyVal + 1);\n      setPosition('');\n    }\n\n    console.log(chipData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreatePollContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Create a Poll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: \"No poll is currently going on. Fill up the form to create a new poll.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 500,\n          maxWidth: '100%',\n          marginTop: 6,\n          marginBottom: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: title,\n          onChange: handleTitleInput,\n          fullWidth: true,\n          label: \"Poll Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: 'row',\n        spacing: 1,\n        sx: {\n          width: 500,\n          maxWidth: '100%',\n          //display: 'flex',\n          marginBottom: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: position,\n          onChange: handlePositionInput,\n          fullWidth: true,\n          label: \"Add a position\",\n          id: \"fullWidth\",\n          sx: {\n            marginRight: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          size: \"large\",\n          onClick: handleAddPosition,\n          children: /*#__PURE__*/_jsxDEV(AddCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 500,\n          maxWidth: '100%',\n          marginBottom: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(ChipsArray, {\n          chipData: chipData,\n          setChipData: setChipData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 500,\n          maxWidth: '100%',\n          marginBottom: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: description,\n          onChange: e => {\n            setDescription(e.target.value);\n          },\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          label: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 500,\n          maxWidth: '100%',\n          marginBottom: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(BasicDatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \" Create poll \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePollPage, \"Lc/58jfMBcxn7OqSky7f0RkO6BA=\");\n\n_c = CreatePollPage;\nexport default CreatePollPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePollPage\");","map":{"version":3,"sources":["/home/towsif/Projects/cse-society-client/src/components/Voting/Admin/CreatePollPage.jsx"],"names":["AddCircle","Box","Button","Container","IconButton","Stack","styled","TextField","Typography","useState","BasicDatePicker","ChipsArray","CreatePollContainer","theme","paddingTop","spacing","height","overflow","CreatePollPage","description","setDescription","keyVal","setKeyVal","title","setTitle","position","setPosition","chipData","setChipData","handleTitleInput","e","target","value","handlePositionInput","handleAddPosition","obj","push","console","log","width","maxWidth","marginTop","marginBottom","marginRight"],"mappings":"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","sourcesContent":["import { AddCircle } from \"@mui/icons-material\";\nimport { Box, Button, Container, IconButton, Stack, styled, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport BasicDatePicker from \"./BasicDatePicker\";\nimport ChipsArray from \"./ChipsArray\";\n\nconst CreatePollContainer = styled(Container)(({ theme }) => ({\n    paddingTop: theme.spacing(10),\n    height: '100%',\n    overflow: 'auto',\n}));\n\nconst CreatePollPage = () => {\n    const [description, setDescription] = useState('');\n    const [keyVal, setKeyVal] = useState(0);\n    const [title, setTitle] = useState('');\n    const [position, setPosition] = useState('');\n    const [chipData, setChipData] = useState([]);\n\n    const handleTitleInput = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const handlePositionInput = (e) => {\n        setPosition(e.target.value);\n    };\n\n    const handleAddPosition = () => {\n        if (position) {\n            const obj = { 'key': keyVal, 'label': position };\n            chipData.push(obj);\n            setKeyVal(keyVal + 1);\n            setPosition('');\n        }\n        console.log(chipData);\n    };\n\n    return (\n        <CreatePollContainer>\n            <Typography variant=\"h4\">Create a Poll</Typography>\n            <br />\n            <Typography variant=\"body2\">\n                No poll is currently going on. Fill up the form to create a new poll.\n            </Typography>\n            <form autoComplete=\"off\">\n                <Box\n                    sx={{\n                        width: 500,\n                        maxWidth: '100%',\n                        marginTop: 6,\n                        marginBottom: 2\n                    }}>\n                    <TextField value={title}\n                        onChange={handleTitleInput}\n                        fullWidth\n                        label=\"Poll Title\"\n                    />\n                </Box>\n\n                <Stack\n                    direction={'row'}\n                    spacing={1}\n                    sx={{\n                        width: 500,\n                        maxWidth: '100%',\n                        //display: 'flex',\n                        marginBottom: 2\n                    }}\n                >\n\n                    <TextField value={position}\n                        onChange={handlePositionInput}\n                        fullWidth\n                        label=\"Add a position\"\n                        id=\"fullWidth\"\n                        sx={{ marginRight: 1 }} />\n\n                    <IconButton color=\"primary\" size=\"large\"\n                        onClick={handleAddPosition}>\n                        <AddCircle />\n                    </IconButton>\n                </Stack>\n\n                <Box\n                    sx={{\n                        width: 500,\n                        maxWidth: '100%',\n                        marginBottom: 2\n                    }}>\n                    {/* <Typography>Added positions: </Typography> */}\n                    <ChipsArray chipData={chipData} setChipData={setChipData} />\n                </Box>\n                <Box\n                    sx={{\n                        width: 500,\n                        maxWidth: '100%',\n                        marginBottom: 2\n                    }}>\n                    <TextField value={description}\n                        onChange={(e) => { setDescription(e.target.value) }}\n                        fullWidth\n                        multiline\n                        rows={4}\n                        label=\"Description\"\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        width: 500,\n                        maxWidth: '100%',\n                        marginBottom: 2\n                    }}>\n                    <BasicDatePicker />\n                </Box>\n                <Button variant=\"contained\"> Create poll </Button>\n            </form>\n\n\n        </CreatePollContainer>\n    );\n};\n\nexport default CreatePollPage;"]},"metadata":{},"sourceType":"module"}